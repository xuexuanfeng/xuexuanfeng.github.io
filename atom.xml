<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>存钱买电瓶车创业的猛男程序员</title>
  
  
  <link href="http://xuexuanfeng.github.io/atom.xml" rel="self"/>
  
  <link href="http://xuexuanfeng.github.io/"/>
  <updated>2024-12-16T15:46:10.201Z</updated>
  <id>http://xuexuanfeng.github.io/</id>
  
  <author>
    <name>xuexuanfeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网球游戏开发</title>
    <link href="http://xuexuanfeng.github.io/2024/12/08/%E7%BD%91%E7%90%83%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    <id>http://xuexuanfeng.github.io/2024/12/08/%E7%BD%91%E7%90%83%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/</id>
    <published>2024-12-08T15:59:13.000Z</published>
    <updated>2024-12-16T15:46:10.201Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网球游戏开发"><a href="#网球游戏开发" class="headerlink" title="网球游戏开发"></a>网球游戏开发</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code>闲来无事，也是为了个人竞争力提升决定立项一个网球游戏，主要类似于网球王子，网球加入抽象技能。可能比较小众，但是记得某个UP主说过，每个独立游戏开发者都会开发这么一款不赚钱的游戏。</code></pre><h2 id="工作日志"><a href="#工作日志" class="headerlink" title="工作日志"></a>工作日志</h2><ol><li>2024&#x2F;12&#x2F;9</li></ol><ul><li>下载了地图场景以及淘宝游戏源码，击球音效，动作的话准备击球逻辑整理清楚了之后再说，毕竟淘宝也要买8块钱了，如果明天unity那边可以免费下资源的话可以尝试白嫖一下。</li></ul><ol start="2"><li>2024&#x2F;12&#x2F;10</li></ol><ul><li>新建Game场景</li><li>搭建碰撞空气墙</li><li>场景内加入角色</li><li>加入输入系统</li><li>角色可移动</li><li>角色可击球<br>但是网球的运动轨迹还不是抛物线，接下来主要攻克。</li></ul><ol start="3"><li>2024&#x2F;12&#x2F;11</li></ol><ul><li>修复了击球报错bug</li><li>网球的位置重置<br>今天没什么时间制作击球功能，但是白天的网上查询决定使用贝塞尔曲线来实现网球的运动，这样可以做出各种各样的球路了</li></ul><ol start="4"><li>2024&#x2F;12&#x2F;12</li></ol><ul><li>修复击球不符合预期的bug</li><li>增加hit委托事件</li><li>调整击球力度</li><li>增加网球的贝塞尔运动轨迹<br>实测下来网球运动用贝塞尔曲线是可行的，落点很精确，剩下要做的是确认击球后的贝塞尔的中间点位置，以及球落地之后的反弹表现，希望可以通过落点之前前两帧计算出向下以及向前的加速度算出反弹的表现</li></ul><ol start="5"><li>2024&#x2F;12&#x2F;13</li></ol><ul><li>新增控制击球效果的manager类</li><li>增加网球落地之后的反弹效果</li><li>增加对战AI<br>接下来需要复刻一下网球王子的击球，控制击球落点,玩了会游戏，感觉需要做球路的预判，然后再按下击球判断是否可以蓄力，如果可以的话进入蓄力状态，上下左右控制落点</li></ul><ol start="6"><li>2024&#x2F;12&#x2F;14</li></ol><ul><li>击球路线预测</li><li>网球落地抖动的问题</li><li>击球点的边界逻辑，默认击球落点逻辑设定</li><li>运动第一轨迹关闭重力，避免网球运动轨迹不符合预期<br>界限来的就是预判占位是否再预判轨迹上，当符合自动击球逻辑的时候按下击球，移动aim光标的坐标来设定击球点</li></ul><ol start="7"><li>2024&#x2F;12&#x2F;15</li></ol><ul><li>击球点的预测</li><li>预判球路之后的自动位移<br>击球这块做得八九不离十了，接下来需要制作主角的locomotion，淘宝买的八块钱资产貌似不好用，焦虑</li></ul><ol start="8"><li>2024&#x2F;12&#x2F;16</li></ol><ul><li>加入有限状态机，添加待机，行走，击球状态</li><li>调整animator状态树，加入待机，行走，击球动作</li><li>重构击球逻辑<br>重构了击球逻辑，改动较大，之前说资产不好用还是不严谨了，只要生成骨骼信息，动画导出为骨骼动画还是能讲究用一下的，就是动作怪了点，但是不至于一动不动。后续可能需要加上左右击球动作的判断。挥拍的动作也要和网球的路线对应上。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网球游戏开发&quot;&gt;&lt;a href=&quot;#网球游戏开发&quot; class=&quot;headerlink&quot; title=&quot;网球游戏开发&quot;&gt;&lt;/a&gt;网球游戏开发&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>UnityAI编程工具Cursor</title>
    <link href="http://xuexuanfeng.github.io/2024/11/04/UnityAI%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7Cursor/"/>
    <id>http://xuexuanfeng.github.io/2024/11/04/UnityAI%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7Cursor/</id>
    <published>2024-11-04T14:45:01.000Z</published>
    <updated>2024-11-04T14:49:48.176Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UnityAI编程工具Cursor"><a href="#UnityAI编程工具Cursor" class="headerlink" title="UnityAI编程工具Cursor"></a>UnityAI编程工具Cursor</h1><p>B站闲逛发现了一个很炸裂的工具Cursor，chatGpt的免费平替了</p><p>Cursor下载: <a href="https://www.cursor.com/">https://www.cursor.com/</a><br>Uinty 插件下下载: <a href="https://github.com/boxqkrtm/com.unity.ide.cursor">https://github.com/boxqkrtm/com.unity.ide.cursor</a></p><ol><li><p>先要去Cursor官网下载，需要翻墙。安装完毕之后选择中文。</p></li><li><p>打开unity工程，在packagemanager中install by githuburl 安装unity插件。</p></li><li><p>Preferences中加入Cursor编辑器</p></li><li><p>双击脚本打开编辑器，界面和vs code差不多。在插件扩展栏搜索unity，把相关的插件都装了。</p></li><li><p>Ctrl+L 呼出AI进行对话，生成代码，点击accept复制代码到文件中。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;UnityAI编程工具Cursor&quot;&gt;&lt;a href=&quot;#UnityAI编程工具Cursor&quot; class=&quot;headerlink&quot; title=&quot;UnityAI编程工具Cursor&quot;&gt;&lt;/a&gt;UnityAI编程工具Cursor&lt;/h1&gt;&lt;p&gt;B站闲逛发现了一个很</summary>
      
    
    
    
    
    <category term="Unity插件工具相关" scheme="http://xuexuanfeng.github.io/tags/Unity%E6%8F%92%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>批量修改图片脚本</title>
    <link href="http://xuexuanfeng.github.io/2024/11/04/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E5%9B%BE%E7%89%87%E8%84%9A%E6%9C%AC/"/>
    <id>http://xuexuanfeng.github.io/2024/11/04/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E5%9B%BE%E7%89%87%E8%84%9A%E6%9C%AC/</id>
    <published>2024-11-04T13:48:05.000Z</published>
    <updated>2024-11-04T14:50:37.758Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unity插件工具相关"><a href="#Unity插件工具相关" class="headerlink" title="Unity插件工具相关"></a>Unity插件工具相关</h1><p>借鉴现有工程代码，比较完美的工具代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">using System.Linq;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEditor;</span><br><span class="line"></span><br><span class="line">public static class WebGLTextureSet</span><br><span class="line">&#123;</span><br><span class="line">    [MenuItem(<span class="string">&quot;OptimizeTool/Texture/WebGLTextureSet&quot;</span>)]</span><br><span class="line">    private static void <span class="function"><span class="title">_Set</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        var paths = AssetDatabase.FindAssets(<span class="string">&quot;t:Texture&quot;</span>, GetPath()).Select(AssetDatabase.GUIDToAssetPath);</span><br><span class="line"></span><br><span class="line">        foreach (var path <span class="keyword">in</span> paths)</span><br><span class="line">        &#123;</span><br><span class="line">            Set(path);</span><br><span class="line">        &#125;</span><br><span class="line">        AssetDatabase.Refresh(ImportAssetOptions.ForceUpdate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static string[] <span class="function"><span class="title">GetPath</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> new string[] &#123; <span class="string">&quot;Assets/HotUpdateResources&quot;</span>, <span class="string">&quot;Assets/Resources&quot;</span> &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void Set(string path)</span><br><span class="line">    &#123;</span><br><span class="line">        var item = TextureImporter.GetAtPath(path) as TextureImporter;</span><br><span class="line">        <span class="keyword">if</span> (item != null)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        bool isChange = Set(item);</span><br><span class="line">        <span class="keyword">if</span> (isChange)</span><br><span class="line">        &#123;</span><br><span class="line">            AssetDatabase.ImportAsset(path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static bool Set(TextureImporter item)</span><br><span class="line">    &#123;</span><br><span class="line">        bool isChange = Set(item, <span class="string">&quot;WebGL&quot;</span>);</span><br><span class="line">        <span class="built_in">return</span> isChange; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static bool Set(TextureImporter item, string str)</span><br><span class="line">    &#123;</span><br><span class="line">        var seting = item.GetPlatformTextureSettings(str);</span><br><span class="line">        bool isChange = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (!seting.overridden)</span><br><span class="line">        &#123;</span><br><span class="line">            seting.overridden = <span class="literal">true</span>;</span><br><span class="line">            isChange = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (seting.format != TextureImporterFormat.ASTC_8x8)</span><br><span class="line">        &#123;</span><br><span class="line">            seting.format = TextureImporterFormat.ASTC_8x8;</span><br><span class="line">            isChange = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (seting.textureCompression == TextureImporterCompression.Uncompressed)</span><br><span class="line">        &#123;</span><br><span class="line">            seting.textureCompression = TextureImporterCompression.Compressed;</span><br><span class="line">            isChange = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isChange)</span><br><span class="line">        &#123;</span><br><span class="line">            item.SetPlatformTextureSettings(seting);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> isChange;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unity插件工具相关&quot;&gt;&lt;a href=&quot;#Unity插件工具相关&quot; class=&quot;headerlink&quot; title=&quot;Unity插件工具相关&quot;&gt;&lt;/a&gt;Unity插件工具相关&lt;/h1&gt;&lt;p&gt;借鉴现有工程代码，比较完美的工具代码&lt;/p&gt;
&lt;figure cla</summary>
      
    
    
    
    
    <category term="Unity插件工具相关" scheme="http://xuexuanfeng.github.io/tags/Unity%E6%8F%92%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>Webgl与Js的交互</title>
    <link href="http://xuexuanfeng.github.io/2024/11/03/Webgl%E4%B8%8EJs%E7%9A%84%E4%BA%A4%E4%BA%92/"/>
    <id>http://xuexuanfeng.github.io/2024/11/03/Webgl%E4%B8%8EJs%E7%9A%84%E4%BA%A4%E4%BA%92/</id>
    <published>2024-11-03T11:54:06.000Z</published>
    <updated>2024-11-03T12:01:27.598Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Webgl与Js的交互"><a href="#Webgl与Js的交互" class="headerlink" title="Webgl与Js的交互"></a>Webgl与Js的交互</h1><p>工作中遇到需求，想要将某些URL进行配置，首先想到的是配置本地数据文件，加载之后反序列化。过程复杂了点，但是可以实现功能。还发现了一种简单的配置方法，就是将url写入js文件中，然后通过Webgl去调用对应的函数取值。</p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>首先要创建jslib文件存入工程中，再编辑器中会看到一个类似于dll状态的文件。大致写法如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">mergeInto(LibraryManager.library, &#123;</span><br><span class="line">    </span><br><span class="line">    Hello: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        window.alert(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    HelloString: <span class="keyword">function</span> (str) &#123;</span><br><span class="line">        //这里使用Pointer_stringify方法转换unity传递过来的字符串</span><br><span class="line">        window.alert(Pointer_stringify(str));</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    PrintFloatArray: <span class="keyword">function</span> (array, size) &#123;</span><br><span class="line">        <span class="keyword">for</span>(var i = 0; i &lt; size; i++)&#123;</span><br><span class="line">            //遍历<span class="built_in">float</span>数组使用HEAPF32，更多类型：HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64</span><br><span class="line">            console.log(HEAPF32[(array &gt;&gt; 2) + i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    AddNumbers: <span class="keyword">function</span> (x, y) &#123;</span><br><span class="line">        //这里unity传递过来int类型数字，不需要转换</span><br><span class="line">        <span class="built_in">return</span> x + y;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    //返回一个字符串到unity</span><br><span class="line">    StringReturnValueFunction: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        var returnStr = <span class="string">&quot;bla&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        var bufferSize = lengthBytesUTF8(returnStr) + 1;</span><br><span class="line">        var buffer = _malloc(bufferSize);</span><br><span class="line">        stringToUTF8(returnStr, buffer, bufferSize);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> buffer;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    BindWebGLTexture: <span class="keyword">function</span> (texture) &#123;</span><br><span class="line">        GLctx.bindTexture(GLctx.TEXTURE_2D, GL.textures[texture]);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>C#代码中调用如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">using System.Runtime.InteropServices;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class callJSTest : MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    [DllImport(<span class="string">&quot;__Internal&quot;</span>)]</span><br><span class="line">    private static extern void Hello();</span><br><span class="line"></span><br><span class="line">    [DllImport(<span class="string">&quot;__Internal&quot;</span>)]</span><br><span class="line">    private static extern void HelloString(string str);</span><br><span class="line"></span><br><span class="line">    [DllImport(<span class="string">&quot;__Internal&quot;</span>)]</span><br><span class="line">    private static extern void PrintFloatArray(<span class="built_in">float</span>[] array, int size);</span><br><span class="line"></span><br><span class="line">    [DllImport(<span class="string">&quot;__Internal&quot;</span>)]</span><br><span class="line">    private static extern int AddNumbers(int x, int y);</span><br><span class="line"></span><br><span class="line">    [DllImport(<span class="string">&quot;__Internal&quot;</span>)]</span><br><span class="line">    private static extern string StringReturnValueFunction();</span><br><span class="line"></span><br><span class="line">    [DllImport(<span class="string">&quot;__Internal&quot;</span>)]</span><br><span class="line">    private static extern void BindWebGLTexture(int texture);</span><br><span class="line"></span><br><span class="line">    void <span class="function"><span class="title">Start</span></span>() &#123;</span><br><span class="line">        Hello();</span><br><span class="line">        </span><br><span class="line">        HelloString(<span class="string">&quot;This is a string.&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">float</span>[] myArray = new <span class="built_in">float</span>[10];</span><br><span class="line">        PrintFloatArray(myArray, myArray.Length);</span><br><span class="line">        </span><br><span class="line">        int result = AddNumbers(5, 7);</span><br><span class="line">        Debug.Log(result);</span><br><span class="line">        </span><br><span class="line">        Debug.Log(StringReturnValueFunction());</span><br><span class="line">        </span><br><span class="line">        var texture = new Texture2D(0, 0, TextureFormat.ARGB32, <span class="literal">false</span>);</span><br><span class="line">        BindWebGLTexture(texture.GetNativeTextureID());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际操作中需要到了点问题，Js中直接return字符串，C#这边取到的值一直为空，网上找了下貌似js的string和C#的string还是有点区别的，不能直接传递。string要从Javascript返回到 Unity，必须使用_malloc分配内存，然后将数据从变量stringToUTF8复制到新分配的内存中，然后返回该内存。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Webgl与Js的交互&quot;&gt;&lt;a href=&quot;#Webgl与Js的交互&quot; class=&quot;headerlink&quot; title=&quot;Webgl与Js的交互&quot;&gt;&lt;/a&gt;Webgl与Js的交互&lt;/h1&gt;&lt;p&gt;工作中遇到需求，想要将某些URL进行配置，首先想到的是配置本地数据文</summary>
      
    
    
    
    
    <category term="Unity微信小游戏" scheme="http://xuexuanfeng.github.io/tags/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Ilruntime调试环境搭建</title>
    <link href="http://xuexuanfeng.github.io/2024/10/28/Ilruntime%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://xuexuanfeng.github.io/2024/10/28/Ilruntime%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2024-10-28T14:33:54.000Z</published>
    <updated>2024-10-28T14:41:48.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ilruntime调试环境搭建"><a href="#Ilruntime调试环境搭建" class="headerlink" title="Ilruntime调试环境搭建"></a>Ilruntime调试环境搭建</h1><p>Ilruntime的安装教程地址<a href="https://ourpalm.github.io/ILRuntime/public/v1/guide/tutorial.html">(点击跳转)</a></p><p>目前看来Ilruntime的调试与xlua相似，都是unity安装完运行环境之后，编辑器内安装对应插件Ilruntime Debugger。据说2.0之前的版本调试插件要上github官网下载对应的插件，2.0以上的直接VS2022扩展里面下载就行，端口就用56000，主要还是StartDebugService调用的时机很关键，太早调用的话会导致打不到断点</p><p>调试器问题解答<a href="https://blog.csdn.net/qq_39162826/article/details/128221561">(点击跳转)</a></p><p>调试条件</p><ol><li><p>安装ILRuntime的VS调试插件（Github上可下载）</p></li><li><p>确定启用DEBUG宏和禁用DISABLE_ILRUNTIME_DEBUG宏</p></li><li><p>检查ILRDomain.DebugService.StartDebugService(56000)是否启用</p></li><li><p>检查PDB是否被加载</p></li><li><p>检查DLL是否为DEBUG版本（提高调试准确性）</p></li></ol><p>以上条件满足还可以支持真机调试</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ilruntime调试环境搭建&quot;&gt;&lt;a href=&quot;#Ilruntime调试环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Ilruntime调试环境搭建&quot;&gt;&lt;/a&gt;Ilruntime调试环境搭建&lt;/h1&gt;&lt;p&gt;Ilruntime的安装教程地址&lt;a</summary>
      
    
    
    
    
    <category term="Unity插件工具相关" scheme="http://xuexuanfeng.github.io/tags/Unity%E6%8F%92%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>IlRuntime小游戏转换</title>
    <link href="http://xuexuanfeng.github.io/2024/10/22/IlRuntime%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AC%E6%8D%A2/"/>
    <id>http://xuexuanfeng.github.io/2024/10/22/IlRuntime%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AC%E6%8D%A2/</id>
    <published>2024-10-22T14:11:13.000Z</published>
    <updated>2024-12-08T16:09:06.464Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IlRuntime小游戏转换工作记录"><a href="#IlRuntime小游戏转换工作记录" class="headerlink" title="IlRuntime小游戏转换工作记录"></a>IlRuntime小游戏转换工作记录</h1><h2 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h2><p>day1 项目移除ILRuntime，提升性能</p><p>day2 config文件资源打包成zip，执行预加载，之后统一解析数据</p><p>day3 FGUI的package数据加入预加载中，调用UIPACKAGE中的异步加载，但是界面没有打开，spineanimation那个玩意儿会报空，得找出解决方案<br>目前看来有三个解决方案：</p><p>先加载完必要的资源然后打开界面—–有很多getwindow之后的调用，而且数量众多<br>使用异步加载界面，然01元素等待加载——日前流程没有跑通，而且spineneanimat1on会报空<br>使用adduisource——目前看来他可以挡住init，但是又很多外部的地方会直接调用界面的public函数</p><p>day4 主要还是使用使用异步加载界面来解决同步加载的问题，主要聚焦于主流程的前两个界面，第一个过场动画已经适配异步了，主界面待调试，目前遇到两个问题，第一个是有很多同步的方式使用spine动画，目前的方案是再3Dloader类中加入委托，将所有需要执行的操作存入委托中，资源加载完毕之后派发事件，通知3DLOADER统一执行委托。但是又发现了一个问题，有很多地方getwindow之后会直接调用界面的内部函数，由于是同步的流程，会导致异步加载完没有完成，panel为空导致报错。</p><h2 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h2><p>day5 早上对其了下spine动画和fgui的异步加载，目前只用createobject就行，他结构初始化和资源加载本身就是分开的逻辑互不影响，这么看来fgui同步改异步还是很方便的，但是进入主界面之后有些spine动画一会显示一会不显示。debug之后发现之前使用的事件派发更新显示逻辑因为Gloader再初始化的时候会调用dispose接口，这就导致了有时候消息发过来了，但是事件侦听被remove了，随即改成了packageitem再gloader注册的时候加入委托对象，这样的好处是packageitem再异步加载完成之后可以精确的派发到指定的gloader对象，而不用像事件派发到每个gloader对象然后在做数据判断。<br>最后开始游戏的时候还会黑屏，需要原项目工程导入ilruntime的debug插件进行逻辑对比。</p><p>day6 早上加入了spinedata的预加载功能，可以特殊化处理一下spine为同步加载，避免了一下繁琐的代码修改，可以说是救命的功能。处理了表格加载异常导致血量血量显示错误的bug。导出webgl版本尝试跑了下，发现浏览器没有log，排查了下log的enable开关没有关，projectsetting的log也打开了，最后原来是filterLogType被设为了只显示error。然后链接登录服务器的时候websocket报错了。目前还在排查。顺带一提webgl导出develope版本后可以模糊的看到报错的函数名，可以说是螺丝壳里做到场了，有用但是不多。</p><p>day7 早上排查了下webgl报错，发现打release版本也可以查看堆栈。只要把publish里的Debug Symbol勾选就会多生成一个文件，里面打开会看到wasm里面的函数ID所对应的函数名，函数里面就需要打log定位了，然后继续说webgl排查问题，游戏底层的log使用stackframe，webgl环境内貌似不支持stackframe，无法实例化，new出来的是null。游戏网络socket通讯用的是tcpclient对象，貌似webgl也支持，传入host之后控制台会报无法解析地址，换成unitywebsocket组件之后就可以正常连接了。不过云开发环境的代理造成了不小的麻烦，打开代理的时候浏览器无法链接服务器。那些localposition为nan的报错也改了，主要是异步加载之后fgui会进行layout组件操作，判断下contentwidth和contentheight如果都为0的话说明正在异步加载，不执行layout操作，资源下载完之后还会进行一次layout的。</p><p>day8 测试发现登陆界面的spine动画有几率会不显示，排查之后发现存在bundle.error不为null的情况，推断应该是本地服务器吞吐量不够，导致的并发下载部分丢失的问题，主要还是代码异步加载里缺少下载失败重新下载的功能，加入之后完美解决。昨天改的GLoader3D中的layout函数会导致进入游戏后unity占用cpu100%,就算停止之后还是100%，很难排查，不过还原代码之后webgl模式下面到没有报错，webgl虽然可以正常游戏，但是有几个奇怪的地方，图片压缩格式一直warning不支持，不管是astc还是etc，然后audio也有一个警告，最要命的是每次加压一张图片就会卡一下，当没有图片解压的时候客户端流畅运行，游戏中也有需要优化的地方，场景物体特效一多就会造成卡顿。</p><p>day9 主要聚焦了下fgui造成的cpu100%问题，通过排除法很难定位到有问题的代码，感觉bug的触发点有很多。奇怪的是cpu虽然占用100%但是编辑器的FPS缺没有降低，而且profile也是很平稳的一个状态，一度怀疑是编辑器的bug。没有找出问题，后面做了下js配置cdn地址。学了一招，原来webgl是可以和js交互的。通过js配置cdn地址可比本地json加载之后解析方便多了。</p><h2 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h2><p>day10 早上做了个图片批处理工具，将所有图片转为astc8*8，并且压缩，bundle总量小了三分之二。研究了下UOS服务，主要的就是搞清楚bucket和relesse版本的关系就可以了，每个release版本就是一个bucket的文件状态，如果bucket里面文件都删光了，不发布release版本，那么还是有文件可以下载下来的。然后开始看抖音sdk的文档，感觉大多和微信差不多，首先官方下载package，导入到工程中，打开BGDT，安装StarkSDKUnityTools之后会又dll的报错，排查下来原来是没有安装editor的安装环境，很好奇为何抖音小游戏和安卓有关系。安装完毕后打开BuildTool，选择运行框架webgl，然后构建WebGL生成zip，再点击开发者工具发布。抖音开发者工具会自动打开项目。感觉很乱，抖音开发者工具把unity工程的根目录作为了小游戏工程的更目录，然后他运行的项目本体就是那个zip文件。</p><p>day11 今天主要主攻小游戏主包瘦身相关的工作，目前定下的方案是将resources文件夹内的图片字体音频打入一个bundle中，然后解包之后进行同步加载处理，这样改动较小，也可以保留项目原有的逻辑。之前createobject执行之后cpu占用100%的bug貌似找到了，在界面资源异步加载处理的地方没有加队列。导致一下子又300多个对象需要reload。加入队列之后继续观察。</p><p>day12 早上收尾了启动界面的开发，实现了resource内资源的剥离，但是界面自适应有点问题，FGUI的界面自适应模式是在代码里面实现的，有个类似于UGUI的canvasscaler的接口。接着加入了bundle下载队列的最大数量限制，不出所料果然是并发下载bundle过多导致的cpu100%。</p><p>day13 发现游戏中有些spine物体会不显示，看了下gowarp下面就没有spine对象，排查之后发现原来每次异步加载之后会调用packitem内的action，但是gloader3d和packitem并不是一一对应的，而是一个packitem公用多个gloader3d对象，从而导致了两次action回调都调用到了一个gloader对象上，导致第二个spine没有被创建。调整了下逻辑，将action改为了delegate，一个spine加载完之后初始化所有用到这个packageitem的loader对象。其中异步加载也做了一系列的优化，当多个组件用到一张图片的时候，第二次下载将会被return，只保留第一次加载的操作，下载完成后统一初始化所有组件。目前看来效果明显。只是进入大厅之后会黑一阵子等待图片加载。</p><p>day14 早上由于外网进步俩服务器，看了会抖音开发者文档，发现有个启动参数可以配置，正好拿来做CDN配置。发散了下思维试了下外网是否可以访问游戏服务器，发现外网并没有503报错，由此判断是unity办公室的网络问题，上报IT后当天解决问题。</p><h2 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h2><p>day15 早上对接了抖音的inputtext，2022及以上的unity和最新的fgui貌似都适配抖音的输入框，但是老版本还是要做一下适配，微信和抖音的实现原理都差不多，主要就是获取焦点之后调用API呼出keyboard。下午发现游戏中的时候有些gloader下面的image会显示不出。debug后发现，主要是游戏中主动调用了seticon，然后又设置了icon的材质球。因为是异步的加载，会导致材质球设置不成功。在设置材质球的代码中加入等待icon加载完全之后再执行逻辑，解决问题。</p><p>day16 小游戏右上角工具图标的界面适配，游戏本身就有这个功能，webgl调整下默认值就行了。小游戏的语言不是中文问题也解决了，原来项目语言是通过application.systemlanguage来判断的，惊了。并且优化了进入大厅的加载，去除了一些不必要的界面初始化。</p><p>day17 添加了异步加载的优化功能，再等待加载的时候放置白色的马赛克图片作为替代。优化了新手引导创建角色的加载，原来gamewindow初始化过早，导致选角界面和战斗界面同时加载造成卡顿，gamewindow的init挪后，选角加载效果变为流畅。但是遇到一个问题，我的手机扫码真机运行之后会报错。DeviceOrientationEvent is not defined。</p><p>day18 DeviceOrientationEvent is not defined的问题找到了，是因为游戏内调用了systemInfo里面的陀螺仪权限，估计是为了做界面的前景与后景结合的立体感。加入了编译宏DOU_YIN,用于区分是否再抖音平台，通过自定义的导出脚本，动态添加编译宏，编译版本成功之后再去除宏，不影响正常的editor使用，为了就是不让douyin的业务逻辑影响到webgl，方便调试。本来想顺便一起通过脚本把plastic的变更项提交了，然后发现不好弄，版本之间的冲突不好处理，不像以前版本机上面无脑用其他人的版本就行了，最终还是决定导出的版本手动提交。还遇到了一个恶心的问题就是新手引导第一关之后必掉线，经过排查发现通关之后只要发送消息，websocke就会close，目前猜测是服务器与客户端协议不一致导致的服务单报错，触发主动断开的逻辑。</p><p>day19 频繁短线的问题找到了，主要是新手引导的时候客户端逻辑不发心跳包，导致下个消息发送到服务器如果间隔时间过长的话服务器会主动断开，新手引导加入心跳解决问题。融合sdk的输入接口接完之后keyboard无法呼出，果断还原成抖音原生的解决方案了，周一的话要一个最新的融合sdk再本地测试一下。</p><h2 id="week5"><a href="#week5" class="headerlink" title="week5"></a>week5</h2><p>day20 早上加入了TTAssetbundle,真机测试之后可以看到cache日志，第二次加载速度明显变快。然后原来融合sdk的inputtext的确是无法接入，他是按照ugui做的，对应的component无法挂在textfield组件，因为fgui的textfield不是mono。下午了解了下抖音侧边栏，抖音审核必备的功能，主要是一个按钮和一个界面组成，目标是引导用户发现并且使用抖音侧边栏。但是sdk给的侧边栏界面是ugui做的，无法和fgui一起自适应。所以决定入口作为fgui动态加载到主界面中，避免后续的频繁改动就不做在主界面里面了。具体做法还需调研。</p><p>day21 考虑了下鉴于项目使用的是FGUI，而融合sdk的通用侧边栏是ugui，最后决定重新依样画葫芦用FGUI做个侧边栏界面，这样既能去除textmeshpro和ugui的package，既缩小了首包大小也缩小了wasm大小，一举两得。侧边栏的真机测试需要联系客服开通测试权限，然后都应打开开发者选项，这样才能再侧边栏看到我的app图标，实现跳转。今天完成了FGUI的界面搭建以及代码编写。</p><p>day22 今天主要是继续侧边栏的调试。再侧边栏测试权限没有审核通过之前可以先用开发者工具测试流程，接入了点击后的奖励领取，以及奖励状态的管理。目前没有服务器，领取奖励之后跳出弹框提示。今天还遇到了个奇怪的东西，进入大厅弹框报错memory out of bound。结果删除library之后重新发布回复正常。再测试时候发现一个问题，用了ttassetbundle之后当bundle有更新，会不去下载而用本地cache，这是因为bundle的名字相同，导致代码判断不需要下载，这样看来bundle的逻辑还得修改，得加上打包option里的md5码后缀才行。然后打bundle的代码也进行了优化，加入了windows和webgl的打包选项，免得我每次都切来切去的打包了，webgl的dxt就不管他了，反正也不打用。</p><p>day23 昨天真机崩溃的bug还是存在，排查下来居然是TTassetBundle的问题，还原成assetbundle之后居然好了，等后面bundle加载md5后缀之后再试试是不是有问题。今天合并了新的版本，代码和资源部分已经全部合并完毕，跑下来进入战斗之后显示有问题，需要再新版本上跑一下看看流程。明天尝试新版本去除ilruntime看看流程对不对。</p><p>day24 合并了新版本的资源，原来的报错是因为有些函数为了性能改为了携程，所以不执行了。处理了下侧边栏按钮的关联自适应，加上了客服按钮并对接功能。下周处理下客服和侧边栏按钮的位置，客服再最左边，应为是个常态的按钮。</p><h2 id="week6"><a href="#week6" class="headerlink" title="week6"></a>week6</h2><p>day25 调整了客服与侧边栏按钮的位置。下午debug了一下断线重连的问题，发现这个游戏不是很需要短线重连，游戏中的断线也只不过是更新下battlecode，客户端主导结果，只顾过再结束的时候要发一个fightresult的消息，只有消息返回结果之<br>后结算流程才会走下去，所以再发送消息断线之后会卡在最后异步，解决方法是发送消息之后注册重连事件侦听，放过程中有重连的操作马上派发事件到gamemode中，执行重连消息的回调，再发一次fightresult。</p><p>day26 今天继续修复了下招财猫的短线重连问题，原来是上一句的侦听没有移除，导致提前触发了result。移除侦听之后恢复正常。sdk相关按钮移到了右边，左侧按钮太多有重叠。明天看一下TTassetbundle，看看能不能重新接入。</p><p>day27 早上看了下bundle的打包流程，原来bundle的命名是更具path而转换成的hash值，所以当内容变化是他的名字是不会改变的。下午重新接入了下TTassetbundle。resourcebundle为了方便更新，后缀加入了版本号，再jengine脚本上配置resourceversion，将所有bundle后缀加入hash值，然后将mainfest.uinty3d文件加入到缓存黑名单，如果这个文件被缓存了那就无法热更新了。这样一来我也理解了为何会有缓存黑名单的存在了。已提交待测试。</p><p>day28 早上bundle加载略微修改了下，resourcebundle加入unload逻辑，测试通过。下午主攻ios内存崩溃问题。测试了一下，dymicmenory再200以下，进入战斗之后到结算崩溃，dymicmenory再200以上进入战斗，直接崩溃，明明还有200多M的内存未使用。增加unityHeap到756之后依然崩溃，估计还是突然加载峰值的问题把，menoryprofile查看内存发现有些界面就算关闭了，但是spine动画的资源依然残留，bundle引用计数是饭否正常运行，主界面是否需要拆分，但是内存回收不处理的话就算拆分了界面还是得崩溃，需要解决的问题还很多。只能先组个demo试一下基础的fgui资源如何释放。</p><p>day29 尝试了下fgui自带的package资源释放可行，spine动画资源释放就比较恶心，有好几个地方引用到了材质球，逐一释清理之后成功释放。对应逻辑已加入项目中。</p><h2 id="week7"><a href="#week7" class="headerlink" title="week7"></a>week7</h2><p>day30 发现resourcebundle卸载之后，进入游戏会有一行报错，排查发现bgm是流失加载，再unloadbundle之后，可能音频流断掉了而导致报错。音频改为不是stream之后解决问题。ios游戏中会出现无法拖动的问题，但是模拟断线重连数次并未重现，真机模拟也是，故而放弃。</p><p>day31 接入了抖音激励广告，很奇怪其他人接的小游戏再播放广告的时候游戏bgm会自动关闭，潮玩团的就不会，不纠结直接代码手动关闭，为了容错，选择静音，再游戏出现问题的时候玩家也可以手动恢复。微信和抖音的貌似有区别，接入微信的时候还得适配一下。逐步开始改QA提出的bug。今天发现了一个神奇的语法，原来ref传入的形参无法再lamd表达式内调用，震惊一百年。</p><h2 id="end"><a href="#end" class="headerlink" title="end"></a>end</h2><p>之後就是内存优化的问题了，由于月底合同就不续签了，当烂尾处理没什么可以记录得了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;IlRuntime小游戏转换工作记录&quot;&gt;&lt;a href=&quot;#IlRuntime小游戏转换工作记录&quot; class=&quot;headerlink&quot; title=&quot;IlRuntime小游戏转换工作记录&quot;&gt;&lt;/a&gt;IlRuntime小游戏转换工作记录&lt;/h1&gt;&lt;h2 id=&quot;w</summary>
      
    
    
    
    
    <category term="Unity微信小游戏" scheme="http://xuexuanfeng.github.io/tags/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Unity解压bundle工具</title>
    <link href="http://xuexuanfeng.github.io/2024/10/22/Unity%E8%A7%A3%E5%8E%8Bbundle%E5%B7%A5%E5%85%B7/"/>
    <id>http://xuexuanfeng.github.io/2024/10/22/Unity%E8%A7%A3%E5%8E%8Bbundle%E5%B7%A5%E5%85%B7/</id>
    <published>2024-10-21T16:05:50.000Z</published>
    <updated>2024-10-21T16:18:57.473Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unity解压bundle工具"><a href="#Unity解压bundle工具" class="headerlink" title="Unity解压bundle工具"></a>Unity解压bundle工具</h1><p>github工程链接地址<a href="https://github.com/RazTools/Studio/releases/tag/v1.36.00">(点击跳转)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unity解压bundle工具&quot;&gt;&lt;a href=&quot;#Unity解压bundle工具&quot; class=&quot;headerlink&quot; title=&quot;Unity解压bundle工具&quot;&gt;&lt;/a&gt;Unity解压bundle工具&lt;/h1&gt;&lt;p&gt;github工程链接地址&lt;a hre</summary>
      
    
    
    
    
    <category term="Unity插件工具相关" scheme="http://xuexuanfeng.github.io/tags/Unity%E6%8F%92%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>Unity微信小游戏刘海屏适配</title>
    <link href="http://xuexuanfeng.github.io/2024/10/20/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%88%98%E6%B5%B7%E5%B1%8F%E9%80%82%E9%85%8D/"/>
    <id>http://xuexuanfeng.github.io/2024/10/20/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%88%98%E6%B5%B7%E5%B1%8F%E9%80%82%E9%85%8D/</id>
    <published>2024-10-20T15:38:22.000Z</published>
    <updated>2024-10-20T15:59:19.456Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unity原生刘海屏适配方案"><a href="#Unity原生刘海屏适配方案" class="headerlink" title="Unity原生刘海屏适配方案"></a>Unity原生刘海屏适配方案</h1><p>网络文章<a href="https://blog.uwa4d.com/archives/USparkle_UGUI-NGUI.html">(文档链接)</a>，给出了UGUI和NGUI的刘海屏适配方案。主要还是通过获取到的safeArea区域的数据，对锚点做偏移处理。新版本的unity可以直接通过Screen.SafeArea来获取安全区域，并不需要文章内的这么麻烦通过原生底层获取。</p><p>UGUI比较简单，在panel上面挂载mono脚本，对RectTransform的anchorMin和anchorMax进行修改即可。要注意的是Panel节点的锚点需要选择右下角的那个撑满选项，并且四个角的锚点都为0，不然的话效果会不符合预期。<br><img src="/img/20241020234707.png" alt="锚点选项"></p><p>NGUI就比较复杂，需要修改NGUI的源码，大致原理都差不多。</p><h1 id="Unity小游戏刘海屏适配方案"><a href="#Unity小游戏刘海屏适配方案" class="headerlink" title="Unity小游戏刘海屏适配方案"></a>Unity小游戏刘海屏适配方案</h1><p>微信小游戏文档给出了获取safeArea的方案<a href="https://wechat-miniprogram.github.io/minigame-unity-webgl-transform/Design/fixScreen.html">(文档链接)</a></p><p>但是有一点比较奇怪的是，WX.GetWindowInfo().windowWidth与unity中的Screen.width并不相等。</p><p>如图<br><img src="/img/20241020235412.png" alt="小游戏输入日志"></p><p>但是通过计算可以知道WX.GetWindowInfo().windowWidth和Screen.width的比例与WX.GetWindowInfo().windowHeight和Screen.height是相等的，都是0.333333，所以可以通过这个参数因子反向推得得到类似于Screen.SafeArea的结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public static Rect WeChatASafeArea;</span><br><span class="line">public static Rect SafeArea</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">#if !UNITY_EDITOR &amp;&amp; USE_WECHATMINISDK</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(WeChatASafeArea.width == 0 &amp;&amp; WeChatASafeArea.height == 0)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">float</span> radio = (<span class="built_in">float</span>)WX.GetWindowInfo().windowWidth / Screen.width;</span><br><span class="line"></span><br><span class="line">    WeChatASafeArea = new Rect();</span><br><span class="line">WeChatASafeArea.width = (<span class="built_in">float</span>)WX.GetWindowInfo().safeArea.width / radio;</span><br><span class="line">    WeChatASafeArea.height = (<span class="built_in">float</span>)WX.GetWindowInfo().safeArea.height / radio;</span><br><span class="line">WeChatASafeArea.x = (<span class="built_in">float</span>)WX.GetWindowInfo().safeArea.left / radio;</span><br><span class="line">WeChatASafeArea.y = ((float)WX.GetWindowInfo().windowHeight - (float)WX.GetWindowInfo().safeArea.height)/radio;</span><br><span class="line"></span><br><span class="line">UnityEngine.Debug.Log(&quot;WeChatASafeArea---------&quot;+WeChatASafeArea);</span><br><span class="line">&#125;</span><br><span class="line">return WeChatASafeArea;</span><br><span class="line">#else</span><br><span class="line"></span><br><span class="line">            return Screen.safeArea;</span><br><span class="line">#endif</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>导出小游戏后完美解决<br><img src="/img/20241020235827.png" alt="微信开发者工具截图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unity原生刘海屏适配方案&quot;&gt;&lt;a href=&quot;#Unity原生刘海屏适配方案&quot; class=&quot;headerlink&quot; title=&quot;Unity原生刘海屏适配方案&quot;&gt;&lt;/a&gt;Unity原生刘海屏适配方案&lt;/h1&gt;&lt;p&gt;网络文章&lt;a href=&quot;https://b</summary>
      
    
    
    
    
    <category term="Unity微信小游戏" scheme="http://xuexuanfeng.github.io/tags/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Unity微信小游戏的bundle加载流程</title>
    <link href="http://xuexuanfeng.github.io/2024/10/16/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84bundle%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/"/>
    <id>http://xuexuanfeng.github.io/2024/10/16/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84bundle%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/</id>
    <published>2024-10-16T15:10:19.000Z</published>
    <updated>2024-10-22T15:58:27.562Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unity微信小游戏的bundle加载流程"><a href="#Unity微信小游戏的bundle加载流程" class="headerlink" title="Unity微信小游戏的bundle加载流程"></a>Unity微信小游戏的bundle加载流程</h1><p>最近在看unity的微信小游戏导出文档<a href="https://hexo.io/docs/writing.html">(文档链接)</a></p><p>1.ab包的发布</p><p>设置如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[MenuItem(<span class="string">&quot;TOOL/BuildBundle&quot;</span>)]</span><br><span class="line">    public static void <span class="function"><span class="title">BuildBundleFun</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        string saveDir = <span class="string">&quot;Assets/StreamingAssets&quot;</span>;</span><br><span class="line"></span><br><span class="line">        AssetBundleBuild[] buildMap = new AssetBundleBuild[1];</span><br><span class="line">        buildMap[0] = new AssetBundleBuild();</span><br><span class="line">        buildMap[0].assetBundleName = <span class="string">&quot;PrefabImage&quot;</span>;</span><br><span class="line">        buildMap[0].assetNames = new string[] &#123; <span class="string">&quot;Assets/Prefab/PrefabImage.prefab&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        BuildAssetBundleOptions options = BuildAssetBundleOptions.AppendHashToAssetBundleName | BuildAssetBundleOptions.ChunkBasedCompression | UnityEditor.BuildAssetBundleOptions.DisableWriteTypeTree | BuildAssetBundleOptions.None;</span><br><span class="line"></span><br><span class="line">        BuildPipeline.BuildAssetBundles(saveDir, buildMap, options, BuildTarget.WeixinMiniGame);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.加载bundle</p><p>加载代码如下，中甲遇到的坑都注释上了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">public class BundleLoader : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public GameObject UIRoot;</span><br><span class="line">    public TextMeshProUGUI TextMeshPro;</span><br><span class="line"></span><br><span class="line">    // Start is called before the first frame update</span><br><span class="line">    void <span class="function"><span class="title">Start</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        TextMeshPro.text = <span class="string">&quot;bundle开始加载&quot;</span>;</span><br><span class="line"></span><br><span class="line">        StartCoroutine(GetAssetBundle());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    IEnumerator <span class="function"><span class="title">GetAssetBundle</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        // TextMeshPro.text = <span class="string">&quot;bundle加载中&quot;</span>;</span><br><span class="line">        // AssetBundle ab = AssetBundle.LoadFromFile(Application.streamingAssetsPath + <span class="string">&quot;/prefabimage_4e539e965d7dbddf7c882ccf00899425&quot;</span>);</span><br><span class="line">        // AssetBundleRequest request = ab.LoadAssetAsync&lt;GameObject&gt;(Application.streamingAssetsPath + <span class="string">&quot;prefabimage&quot;</span>);</span><br><span class="line">        // yield <span class="built_in">return</span> request;</span><br><span class="line">        // TextMeshPro.text = <span class="string">&quot;bundle加载完毕&quot;</span>;</span><br><span class="line"></span><br><span class="line">        TextMeshPro.text = <span class="string">&quot;bundle加载中&quot;</span>;</span><br><span class="line">        UnityWebRequest www = UnityWebRequestAssetBundle.GetAssetBundle(<span class="string">&quot;http://localhost/prefabimage_4e539e965d7dbddf7c882ccf00899425&quot;</span>);</span><br><span class="line">        //不是小游戏的话得通过streamassets路径加载，要不然会could not be loaded <span class="keyword">in</span> the Editor because it was built without <span class="built_in">type</span> trees</span><br><span class="line">        //好像是他给出的优化打包方案DisableWriteTypeTree导致的</span><br><span class="line">        //DownloadHandlerAssetBundle handler = new DownloadHandlerAssetBundle(www.url, uint.MaxValue);  //这里会报Error <span class="keyword">while</span> downloading Asset Bundle: CRC Mismatc</span><br><span class="line">        //www.downloadHandler = handler;</span><br><span class="line">        yield <span class="built_in">return</span> www.SendWebRequest();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (www.result != UnityWebRequest.Result.Success)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(www.error);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            // Extracts AssetBundle</span><br><span class="line">            AssetBundle assetBundle = (www.downloadHandler as DownloadHandlerAssetBundle).assetBundle;</span><br><span class="line"></span><br><span class="line">            AssetBundleRequest request = assetBundle.LoadAssetAsync&lt;GameObject&gt;(<span class="string">&quot;Assets/Prefab/PrefabImage.prefab&quot;</span>);</span><br><span class="line">            yield <span class="built_in">return</span> request;</span><br><span class="line">            GameObject.Instantiate(request.asset, UIRoot.transform);</span><br><span class="line"></span><br><span class="line">            TextMeshPro.text = <span class="string">&quot;bundle加载完毕&quot;</span>;</span><br><span class="line"></span><br><span class="line">            assetBundle.Unload(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        www.Dispose();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h1><ol><li>由于打出的ab包是带hash后缀的，所以业务逻辑加载的时候怎么拼接路径</li></ol><p>首先获取manifest文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AssetBundleCreateRequest assetBundleCreateRequest = AssetBundle.LoadFromFileAsync(Application.streamingAssetsPath+<span class="string">&quot;/StreamingAssets&quot;</span>);</span><br><span class="line">yield <span class="built_in">return</span> assetBundleCreateRequest;</span><br><span class="line">        </span><br><span class="line">AssetBundleManifest mBundleManifest = (AssetBundleManifest)assetBundleCreateRequest.assetBundle.LoadAsset(<span class="string">&quot;AssetBundleManifest&quot;</span>);</span><br></pre></td></tr></table></figure><p>可以先通过mBundleManifest.GetAllAssetBundles()获取所有的bundle列表，然后再通过mBundleManifest.GetAssetBundleHash(bundlename)来获取到对应bundle的hash，但是这样就要再初始化的时候新建一个列表来保存bundle和hash之间的关系，然而这样又会有很多字符串的分割操作在里面，显得很不效率。能想到比较合理的方法是打包的时候就解manifest，然后取出对应的hash做记录，进入游戏的时候加载hash解释文件。</p><ol start="2"><li>目前这个demo没有触发小游戏的缓存逻辑，等文档通读之后还得继续走流程</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unity微信小游戏的bundle加载流程&quot;&gt;&lt;a href=&quot;#Unity微信小游戏的bundle加载流程&quot; class=&quot;headerlink&quot; title=&quot;Unity微信小游戏的bundle加载流程&quot;&gt;&lt;/a&gt;Unity微信小游戏的bundle加载流程&lt;/</summary>
      
    
    
    
    
    <category term="Unity微信小游戏" scheme="http://xuexuanfeng.github.io/tags/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>UNITY  3D HUD 的优化以及原理</title>
    <link href="http://xuexuanfeng.github.io/2024/10/13/UNITY%203D%20HUD%20%E7%9A%84%E4%BC%98%E5%8C%96%E4%BB%A5%E5%8F%8A%E5%8E%9F%E7%90%86/"/>
    <id>http://xuexuanfeng.github.io/2024/10/13/UNITY%203D%20HUD%20%E7%9A%84%E4%BC%98%E5%8C%96%E4%BB%A5%E5%8F%8A%E5%8E%9F%E7%90%86/</id>
    <published>2024-10-13T14:22:13.000Z</published>
    <updated>2024-10-13T15:28:45.518Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UNITY-3D-HUD-的优化以及原理"><a href="#UNITY-3D-HUD-的优化以及原理" class="headerlink" title="UNITY  3D HUD 的优化以及原理"></a>UNITY  3D HUD 的优化以及原理</h1><h3 id="事情经过"><a href="#事情经过" class="headerlink" title="事情经过"></a>事情经过</h3><p>&emsp;&emsp;前一阵面试的时候被面试官问道3D HUD 的实现原理，将2D,3D实现原理自信的阐述了一番，以为万事大吉！不料面试官提问：如果3DHUD在角色旋转的时候变糊这是为什么？  说实话应为没有实操过，并没有遇到这个问题，一顿已读乱回，接下来就看看到底是为什么。</p><p>&emsp;&emsp;B站搜索发现猛男demo传送门  <a href="https://www.bilibili.com/video/BV1cS4y1M7JL/?spm_id_from=333.880.my_history.page.click&vd_source=757af868ca167689ee49a2bde553ef7f">https://www.bilibili.com/video/BV1cS4y1M7JL/?spm_id_from=333.880.my_history.page.click&amp;vd_source=757af868ca167689ee49a2bde553ef7f</a></p><p>&emsp;&emsp;其实很简单，主要的核心就是这几行代码,原来一直以为hud做look摄像机就可以了，其实是不对的，如果使用lookat那么在有些角度hud会又倾斜还是会给人一种3D感，将rotation设置与camera一样则可以完美的解决这一个问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// slider.direction = Slider.Direction.RightToLeft;</span><br><span class="line">// slider.transform.LookAt(Camera.main.transform.position);</span><br><span class="line"></span><br><span class="line">slider.direction = Slider.Direction.LeftToRight;</span><br><span class="line">slider.transform.rotation = Camera.main.transform.rotation;</span><br></pre></td></tr></table></figure><p>unity层级结构如下<br><img src="/img/20241013224055.png" alt="unity层级结构如下"></p><p>&emsp;&emsp;项目运行一段时间之后发现，的确图片会出现变糊的现象，经过排查，判断应该是cube旋转之后影响到了hud的rotation，然后hud由于mono脚本也在不停的改变其rotation，如果有一针cube旋转的执行时序慢于mono脚本。那么就会出现抖动的情况，我估计面试官想表达的就是这个。累了，但愿天堂没有面试。</p><p><a href="https://gitee.com/WondrousWisdomcard/unity3d-homework/tree/master/Homework06">测试项目地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;UNITY-3D-HUD-的优化以及原理&quot;&gt;&lt;a href=&quot;#UNITY-3D-HUD-的优化以及原理&quot; class=&quot;headerlink&quot; title=&quot;UNITY  3D HUD 的优化以及原理&quot;&gt;&lt;/a&gt;UNITY  3D HUD 的优化以及原理&lt;/h1</summary>
      
    
    
    
    
    <category term="unity优化" scheme="http://xuexuanfeng.github.io/tags/unity%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xuexuanfeng.github.io/2024/10/11/hello-world/"/>
    <id>http://xuexuanfeng.github.io/2024/10/11/hello-world/</id>
    <published>2024-10-11T15:51:13.226Z</published>
    <updated>2024-10-11T15:51:13.226Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
