<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>存钱买电瓶车创业的猛男程序员</title>
  
  
  <link href="http://xuexuanfeng.github.io/atom.xml" rel="self"/>
  
  <link href="http://xuexuanfeng.github.io/"/>
  <updated>2024-10-28T14:41:48.131Z</updated>
  <id>http://xuexuanfeng.github.io/</id>
  
  <author>
    <name>xuexuanfeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ilruntime调试环境搭建</title>
    <link href="http://xuexuanfeng.github.io/2024/10/28/Ilruntime%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://xuexuanfeng.github.io/2024/10/28/Ilruntime%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2024-10-28T14:33:54.000Z</published>
    <updated>2024-10-28T14:41:48.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ilruntime调试环境搭建"><a href="#Ilruntime调试环境搭建" class="headerlink" title="Ilruntime调试环境搭建"></a>Ilruntime调试环境搭建</h1><p>Ilruntime的安装教程地址<a href="https://ourpalm.github.io/ILRuntime/public/v1/guide/tutorial.html">(点击跳转)</a></p><p>目前看来Ilruntime的调试与xlua相似，都是unity安装完运行环境之后，编辑器内安装对应插件Ilruntime Debugger。据说2.0之前的版本调试插件要上github官网下载对应的插件，2.0以上的直接VS2022扩展里面下载就行，端口就用56000，主要还是StartDebugService调用的时机很关键，太早调用的话会导致打不到断点</p><p>调试器问题解答<a href="https://blog.csdn.net/qq_39162826/article/details/128221561">(点击跳转)</a></p><p>调试条件</p><ol><li><p>安装ILRuntime的VS调试插件（Github上可下载）</p></li><li><p>确定启用DEBUG宏和禁用DISABLE_ILRUNTIME_DEBUG宏</p></li><li><p>检查ILRDomain.DebugService.StartDebugService(56000)是否启用</p></li><li><p>检查PDB是否被加载</p></li><li><p>检查DLL是否为DEBUG版本（提高调试准确性）</p></li></ol><p>以上条件满足还可以支持真机调试</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ilruntime调试环境搭建&quot;&gt;&lt;a href=&quot;#Ilruntime调试环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Ilruntime调试环境搭建&quot;&gt;&lt;/a&gt;Ilruntime调试环境搭建&lt;/h1&gt;&lt;p&gt;Ilruntime的安装教程地址&lt;a</summary>
      
    
    
    
    
    <category term="Unity插件工具相关" scheme="http://xuexuanfeng.github.io/tags/Unity%E6%8F%92%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>IlRuntime小游戏转换</title>
    <link href="http://xuexuanfeng.github.io/2024/10/22/IlRuntime%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AC%E6%8D%A2/"/>
    <id>http://xuexuanfeng.github.io/2024/10/22/IlRuntime%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AC%E6%8D%A2/</id>
    <published>2024-10-22T14:11:13.000Z</published>
    <updated>2024-10-29T15:15:07.970Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IlRuntime小游戏转换工作记录"><a href="#IlRuntime小游戏转换工作记录" class="headerlink" title="IlRuntime小游戏转换工作记录"></a>IlRuntime小游戏转换工作记录</h1><p>day1 项目移除ILRuntime，提升性能</p><p>day2 config文件资源打包成zip，执行预加载，之后统一解析数据</p><p>day3 FGUI的package数据加入预加载中，调用UIPACKAGE中的异步加载，但是界面没有打开，spineanimation那个玩意儿会报空，得找出解决方案<br>目前看来有三个解决方案：<br>先加载完必要的资源然后打开界面—–有很多getwindow之后的调用，而且数量众多<br>使用异步加载界面，然01元素等待加载——日前流程没有跑通，而且spineneanimat1on会报空<br>使用adduisource——目前看来他可以挡住init，但是又很多外部的地方会直接调用界面的public函数</p><p>day4 主要还是使用使用异步加载界面来解决同步加载的问题，主要聚焦于主流程的前两个界面，第一个过场动画已经适配异步了，主界面待调试，目前遇到两个问题，第一个是有很多同步的方式使用spine动画，目前的方案是再3Dloader类中加入委托，将所有需要执行的操作存入委托中，资源加载完毕之后派发事件，通知3DLOADER统一执行委托。但是又发现了一个问题，有很多地方getwindow之后会直接调用界面的内部函数，由于是同步的流程，会导致异步加载完没有完成，panel为空导致报错。</p><p>day5 早上对其了下spine动画和fgui的异步加载，目前只用createobject就行，他结构初始化和资源加载本身就是分开的逻辑互不影响，这么看来fgui同步改异步还是很方便的，但是进入主界面之后有些spine动画一会显示一会不显示。debug之后发现之前使用的事件派发更新显示逻辑因为Gloader再初始化的时候会调用dispose接口，这就导致了有时候消息发过来了，但是事件侦听被remove了，随即改成了packageitem再gloader注册的时候加入委托对象，这样的好处是packageitem再异步加载完成之后可以精确的派发到指定的gloader对象，而不用像事件派发到每个gloader对象然后在做数据判断。<br>最后开始游戏的时候还会黑屏，需要原项目工程导入ilruntime的debug插件进行逻辑对比。</p><p>day6 早上加入了spinedata的预加载功能，可以特殊化处理一下spine为同步加载，避免了一下繁琐的代码修改，可以说是救命的功能。处理了表格加载异常导致血量血量显示错误的bug。导出webgl版本尝试跑了下，发现浏览器没有log，排查了下log的enable开关没有关，projectsetting的log也打开了，最后原来是filterLogType被设为了只显示error。然后链接登录服务器的时候websocket报错了。目前还在排查。顺带一提webgl导出develope版本后可以模糊的看到报错的函数名，可以说是螺丝壳里做到场了，有用但是不多。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;IlRuntime小游戏转换工作记录&quot;&gt;&lt;a href=&quot;#IlRuntime小游戏转换工作记录&quot; class=&quot;headerlink&quot; title=&quot;IlRuntime小游戏转换工作记录&quot;&gt;&lt;/a&gt;IlRuntime小游戏转换工作记录&lt;/h1&gt;&lt;p&gt;day1 项</summary>
      
    
    
    
    
    <category term="Unity微信小游戏" scheme="http://xuexuanfeng.github.io/tags/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Unity解压bundle工具</title>
    <link href="http://xuexuanfeng.github.io/2024/10/22/Unity%E8%A7%A3%E5%8E%8Bbundle%E5%B7%A5%E5%85%B7/"/>
    <id>http://xuexuanfeng.github.io/2024/10/22/Unity%E8%A7%A3%E5%8E%8Bbundle%E5%B7%A5%E5%85%B7/</id>
    <published>2024-10-21T16:05:50.000Z</published>
    <updated>2024-10-21T16:18:57.473Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unity解压bundle工具"><a href="#Unity解压bundle工具" class="headerlink" title="Unity解压bundle工具"></a>Unity解压bundle工具</h1><p>github工程链接地址<a href="https://github.com/RazTools/Studio/releases/tag/v1.36.00">(点击跳转)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unity解压bundle工具&quot;&gt;&lt;a href=&quot;#Unity解压bundle工具&quot; class=&quot;headerlink&quot; title=&quot;Unity解压bundle工具&quot;&gt;&lt;/a&gt;Unity解压bundle工具&lt;/h1&gt;&lt;p&gt;github工程链接地址&lt;a hre</summary>
      
    
    
    
    
    <category term="Unity插件工具相关" scheme="http://xuexuanfeng.github.io/tags/Unity%E6%8F%92%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>Unity微信小游戏刘海屏适配</title>
    <link href="http://xuexuanfeng.github.io/2024/10/20/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%88%98%E6%B5%B7%E5%B1%8F%E9%80%82%E9%85%8D/"/>
    <id>http://xuexuanfeng.github.io/2024/10/20/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%88%98%E6%B5%B7%E5%B1%8F%E9%80%82%E9%85%8D/</id>
    <published>2024-10-20T15:38:22.000Z</published>
    <updated>2024-10-20T15:59:19.456Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unity原生刘海屏适配方案"><a href="#Unity原生刘海屏适配方案" class="headerlink" title="Unity原生刘海屏适配方案"></a>Unity原生刘海屏适配方案</h1><p>网络文章<a href="https://blog.uwa4d.com/archives/USparkle_UGUI-NGUI.html">(文档链接)</a>，给出了UGUI和NGUI的刘海屏适配方案。主要还是通过获取到的safeArea区域的数据，对锚点做偏移处理。新版本的unity可以直接通过Screen.SafeArea来获取安全区域，并不需要文章内的这么麻烦通过原生底层获取。</p><p>UGUI比较简单，在panel上面挂载mono脚本，对RectTransform的anchorMin和anchorMax进行修改即可。要注意的是Panel节点的锚点需要选择右下角的那个撑满选项，并且四个角的锚点都为0，不然的话效果会不符合预期。<br><img src="/img/20241020234707.png" alt="锚点选项"></p><p>NGUI就比较复杂，需要修改NGUI的源码，大致原理都差不多。</p><h1 id="Unity小游戏刘海屏适配方案"><a href="#Unity小游戏刘海屏适配方案" class="headerlink" title="Unity小游戏刘海屏适配方案"></a>Unity小游戏刘海屏适配方案</h1><p>微信小游戏文档给出了获取safeArea的方案<a href="https://wechat-miniprogram.github.io/minigame-unity-webgl-transform/Design/fixScreen.html">(文档链接)</a></p><p>但是有一点比较奇怪的是，WX.GetWindowInfo().windowWidth与unity中的Screen.width并不相等。</p><p>如图<br><img src="/img/20241020235412.png" alt="小游戏输入日志"></p><p>但是通过计算可以知道WX.GetWindowInfo().windowWidth和Screen.width的比例与WX.GetWindowInfo().windowHeight和Screen.height是相等的，都是0.333333，所以可以通过这个参数因子反向推得得到类似于Screen.SafeArea的结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public static Rect WeChatASafeArea;</span><br><span class="line">public static Rect SafeArea</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">#if !UNITY_EDITOR &amp;&amp; USE_WECHATMINISDK</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(WeChatASafeArea.width == 0 &amp;&amp; WeChatASafeArea.height == 0)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">float</span> radio = (<span class="built_in">float</span>)WX.GetWindowInfo().windowWidth / Screen.width;</span><br><span class="line"></span><br><span class="line">    WeChatASafeArea = new Rect();</span><br><span class="line">WeChatASafeArea.width = (<span class="built_in">float</span>)WX.GetWindowInfo().safeArea.width / radio;</span><br><span class="line">    WeChatASafeArea.height = (<span class="built_in">float</span>)WX.GetWindowInfo().safeArea.height / radio;</span><br><span class="line">WeChatASafeArea.x = (<span class="built_in">float</span>)WX.GetWindowInfo().safeArea.left / radio;</span><br><span class="line">WeChatASafeArea.y = ((float)WX.GetWindowInfo().windowHeight - (float)WX.GetWindowInfo().safeArea.height)/radio;</span><br><span class="line"></span><br><span class="line">UnityEngine.Debug.Log(&quot;WeChatASafeArea---------&quot;+WeChatASafeArea);</span><br><span class="line">&#125;</span><br><span class="line">return WeChatASafeArea;</span><br><span class="line">#else</span><br><span class="line"></span><br><span class="line">            return Screen.safeArea;</span><br><span class="line">#endif</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>导出小游戏后完美解决<br><img src="/img/20241020235827.png" alt="微信开发者工具截图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unity原生刘海屏适配方案&quot;&gt;&lt;a href=&quot;#Unity原生刘海屏适配方案&quot; class=&quot;headerlink&quot; title=&quot;Unity原生刘海屏适配方案&quot;&gt;&lt;/a&gt;Unity原生刘海屏适配方案&lt;/h1&gt;&lt;p&gt;网络文章&lt;a href=&quot;https://b</summary>
      
    
    
    
    
    <category term="Unity微信小游戏" scheme="http://xuexuanfeng.github.io/tags/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Unity微信小游戏的bundle加载流程</title>
    <link href="http://xuexuanfeng.github.io/2024/10/16/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84bundle%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/"/>
    <id>http://xuexuanfeng.github.io/2024/10/16/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84bundle%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B/</id>
    <published>2024-10-16T15:10:19.000Z</published>
    <updated>2024-10-22T15:58:27.562Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unity微信小游戏的bundle加载流程"><a href="#Unity微信小游戏的bundle加载流程" class="headerlink" title="Unity微信小游戏的bundle加载流程"></a>Unity微信小游戏的bundle加载流程</h1><p>最近在看unity的微信小游戏导出文档<a href="https://hexo.io/docs/writing.html">(文档链接)</a></p><p>1.ab包的发布</p><p>设置如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[MenuItem(<span class="string">&quot;TOOL/BuildBundle&quot;</span>)]</span><br><span class="line">    public static void <span class="function"><span class="title">BuildBundleFun</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        string saveDir = <span class="string">&quot;Assets/StreamingAssets&quot;</span>;</span><br><span class="line"></span><br><span class="line">        AssetBundleBuild[] buildMap = new AssetBundleBuild[1];</span><br><span class="line">        buildMap[0] = new AssetBundleBuild();</span><br><span class="line">        buildMap[0].assetBundleName = <span class="string">&quot;PrefabImage&quot;</span>;</span><br><span class="line">        buildMap[0].assetNames = new string[] &#123; <span class="string">&quot;Assets/Prefab/PrefabImage.prefab&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        BuildAssetBundleOptions options = BuildAssetBundleOptions.AppendHashToAssetBundleName | BuildAssetBundleOptions.ChunkBasedCompression | UnityEditor.BuildAssetBundleOptions.DisableWriteTypeTree | BuildAssetBundleOptions.None;</span><br><span class="line"></span><br><span class="line">        BuildPipeline.BuildAssetBundles(saveDir, buildMap, options, BuildTarget.WeixinMiniGame);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.加载bundle</p><p>加载代码如下，中甲遇到的坑都注释上了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">public class BundleLoader : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public GameObject UIRoot;</span><br><span class="line">    public TextMeshProUGUI TextMeshPro;</span><br><span class="line"></span><br><span class="line">    // Start is called before the first frame update</span><br><span class="line">    void <span class="function"><span class="title">Start</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        TextMeshPro.text = <span class="string">&quot;bundle开始加载&quot;</span>;</span><br><span class="line"></span><br><span class="line">        StartCoroutine(GetAssetBundle());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    IEnumerator <span class="function"><span class="title">GetAssetBundle</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        // TextMeshPro.text = <span class="string">&quot;bundle加载中&quot;</span>;</span><br><span class="line">        // AssetBundle ab = AssetBundle.LoadFromFile(Application.streamingAssetsPath + <span class="string">&quot;/prefabimage_4e539e965d7dbddf7c882ccf00899425&quot;</span>);</span><br><span class="line">        // AssetBundleRequest request = ab.LoadAssetAsync&lt;GameObject&gt;(Application.streamingAssetsPath + <span class="string">&quot;prefabimage&quot;</span>);</span><br><span class="line">        // yield <span class="built_in">return</span> request;</span><br><span class="line">        // TextMeshPro.text = <span class="string">&quot;bundle加载完毕&quot;</span>;</span><br><span class="line"></span><br><span class="line">        TextMeshPro.text = <span class="string">&quot;bundle加载中&quot;</span>;</span><br><span class="line">        UnityWebRequest www = UnityWebRequestAssetBundle.GetAssetBundle(<span class="string">&quot;http://localhost/prefabimage_4e539e965d7dbddf7c882ccf00899425&quot;</span>);</span><br><span class="line">        //不是小游戏的话得通过streamassets路径加载，要不然会could not be loaded <span class="keyword">in</span> the Editor because it was built without <span class="built_in">type</span> trees</span><br><span class="line">        //好像是他给出的优化打包方案DisableWriteTypeTree导致的</span><br><span class="line">        //DownloadHandlerAssetBundle handler = new DownloadHandlerAssetBundle(www.url, uint.MaxValue);  //这里会报Error <span class="keyword">while</span> downloading Asset Bundle: CRC Mismatc</span><br><span class="line">        //www.downloadHandler = handler;</span><br><span class="line">        yield <span class="built_in">return</span> www.SendWebRequest();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (www.result != UnityWebRequest.Result.Success)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(www.error);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            // Extracts AssetBundle</span><br><span class="line">            AssetBundle assetBundle = (www.downloadHandler as DownloadHandlerAssetBundle).assetBundle;</span><br><span class="line"></span><br><span class="line">            AssetBundleRequest request = assetBundle.LoadAssetAsync&lt;GameObject&gt;(<span class="string">&quot;Assets/Prefab/PrefabImage.prefab&quot;</span>);</span><br><span class="line">            yield <span class="built_in">return</span> request;</span><br><span class="line">            GameObject.Instantiate(request.asset, UIRoot.transform);</span><br><span class="line"></span><br><span class="line">            TextMeshPro.text = <span class="string">&quot;bundle加载完毕&quot;</span>;</span><br><span class="line"></span><br><span class="line">            assetBundle.Unload(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        www.Dispose();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h1><ol><li>由于打出的ab包是带hash后缀的，所以业务逻辑加载的时候怎么拼接路径</li></ol><p>首先获取manifest文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AssetBundleCreateRequest assetBundleCreateRequest = AssetBundle.LoadFromFileAsync(Application.streamingAssetsPath+<span class="string">&quot;/StreamingAssets&quot;</span>);</span><br><span class="line">yield <span class="built_in">return</span> assetBundleCreateRequest;</span><br><span class="line">        </span><br><span class="line">AssetBundleManifest mBundleManifest = (AssetBundleManifest)assetBundleCreateRequest.assetBundle.LoadAsset(<span class="string">&quot;AssetBundleManifest&quot;</span>);</span><br></pre></td></tr></table></figure><p>可以先通过mBundleManifest.GetAllAssetBundles()获取所有的bundle列表，然后再通过mBundleManifest.GetAssetBundleHash(bundlename)来获取到对应bundle的hash，但是这样就要再初始化的时候新建一个列表来保存bundle和hash之间的关系，然而这样又会有很多字符串的分割操作在里面，显得很不效率。能想到比较合理的方法是打包的时候就解manifest，然后取出对应的hash做记录，进入游戏的时候加载hash解释文件。</p><ol start="2"><li>目前这个demo没有触发小游戏的缓存逻辑，等文档通读之后还得继续走流程</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unity微信小游戏的bundle加载流程&quot;&gt;&lt;a href=&quot;#Unity微信小游戏的bundle加载流程&quot; class=&quot;headerlink&quot; title=&quot;Unity微信小游戏的bundle加载流程&quot;&gt;&lt;/a&gt;Unity微信小游戏的bundle加载流程&lt;/</summary>
      
    
    
    
    
    <category term="Unity微信小游戏" scheme="http://xuexuanfeng.github.io/tags/Unity%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>UNITY  3D HUD 的优化以及原理</title>
    <link href="http://xuexuanfeng.github.io/2024/10/13/UNITY%203D%20HUD%20%E7%9A%84%E4%BC%98%E5%8C%96%E4%BB%A5%E5%8F%8A%E5%8E%9F%E7%90%86/"/>
    <id>http://xuexuanfeng.github.io/2024/10/13/UNITY%203D%20HUD%20%E7%9A%84%E4%BC%98%E5%8C%96%E4%BB%A5%E5%8F%8A%E5%8E%9F%E7%90%86/</id>
    <published>2024-10-13T14:22:13.000Z</published>
    <updated>2024-10-13T15:28:45.518Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UNITY-3D-HUD-的优化以及原理"><a href="#UNITY-3D-HUD-的优化以及原理" class="headerlink" title="UNITY  3D HUD 的优化以及原理"></a>UNITY  3D HUD 的优化以及原理</h1><h3 id="事情经过"><a href="#事情经过" class="headerlink" title="事情经过"></a>事情经过</h3><p>&emsp;&emsp;前一阵面试的时候被面试官问道3D HUD 的实现原理，将2D,3D实现原理自信的阐述了一番，以为万事大吉！不料面试官提问：如果3DHUD在角色旋转的时候变糊这是为什么？  说实话应为没有实操过，并没有遇到这个问题，一顿已读乱回，接下来就看看到底是为什么。</p><p>&emsp;&emsp;B站搜索发现猛男demo传送门  <a href="https://www.bilibili.com/video/BV1cS4y1M7JL/?spm_id_from=333.880.my_history.page.click&vd_source=757af868ca167689ee49a2bde553ef7f">https://www.bilibili.com/video/BV1cS4y1M7JL/?spm_id_from=333.880.my_history.page.click&amp;vd_source=757af868ca167689ee49a2bde553ef7f</a></p><p>&emsp;&emsp;其实很简单，主要的核心就是这几行代码,原来一直以为hud做look摄像机就可以了，其实是不对的，如果使用lookat那么在有些角度hud会又倾斜还是会给人一种3D感，将rotation设置与camera一样则可以完美的解决这一个问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// slider.direction = Slider.Direction.RightToLeft;</span><br><span class="line">// slider.transform.LookAt(Camera.main.transform.position);</span><br><span class="line"></span><br><span class="line">slider.direction = Slider.Direction.LeftToRight;</span><br><span class="line">slider.transform.rotation = Camera.main.transform.rotation;</span><br></pre></td></tr></table></figure><p>unity层级结构如下<br><img src="/img/20241013224055.png" alt="unity层级结构如下"></p><p>&emsp;&emsp;项目运行一段时间之后发现，的确图片会出现变糊的现象，经过排查，判断应该是cube旋转之后影响到了hud的rotation，然后hud由于mono脚本也在不停的改变其rotation，如果有一针cube旋转的执行时序慢于mono脚本。那么就会出现抖动的情况，我估计面试官想表达的就是这个。累了，但愿天堂没有面试。</p><p><a href="https://gitee.com/WondrousWisdomcard/unity3d-homework/tree/master/Homework06">测试项目地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;UNITY-3D-HUD-的优化以及原理&quot;&gt;&lt;a href=&quot;#UNITY-3D-HUD-的优化以及原理&quot; class=&quot;headerlink&quot; title=&quot;UNITY  3D HUD 的优化以及原理&quot;&gt;&lt;/a&gt;UNITY  3D HUD 的优化以及原理&lt;/h1</summary>
      
    
    
    
    
    <category term="unity优化" scheme="http://xuexuanfeng.github.io/tags/unity%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xuexuanfeng.github.io/2024/10/11/hello-world/"/>
    <id>http://xuexuanfeng.github.io/2024/10/11/hello-world/</id>
    <published>2024-10-11T15:51:13.226Z</published>
    <updated>2024-10-11T15:51:13.226Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
